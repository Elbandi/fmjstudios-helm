# Default Helm values for fmjstudios/uptimeKuma.
# Reference: https://github.com/fmjstudios/helm

# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## @section Uptime-Kuma Image parameters
##

## Uptime-Kuma Server Image
## ref: https://hub.docker.com/r/louislam/uptime-kuma
## @param image.registry [default: docker.io] The Docker registry to pull the image from
## @param image.repository [default: louislam/uptimeKuma] The registry repository to pull the image from
## @param image.tag [string, default: '1.23.11'] The image tag to pull
## @param image.digest [string] The image digest to pull
## @param image.pullPolicy [string, default: IfNotPresent] The Kubernetes image pull policy
## @param image.pullSecrets [array] A list of secrets to use for pulling images from private registries

image:
  registry: docker.io
  repository: louislam/uptime-kuma
  tag: 1.23.13
  digest: ""
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []

## @section Uptime-Kuma Name overrides
##

## @param nameOverride String to partially override uptimeKuma.fullname
##
nameOverride: ""

## @param fullnameOverride String to fully override uptimeKuma.fullname
##
fullnameOverride: ""

## @section Uptime-Kuma Configuration parameters
##

## Uptime-Kuma configuration
## ref: https://github.com/louislam/uptime-kuma/wiki/Environment-Variables

uptimeKuma:
  ## @param uptimeKuma.host [default: "::"] The host address to bind Uptime-Kuma to
  ##
  host: "0.0.0.0"
  ## @param uptimeKuma.port [default: 3001] The port for Uptime-Kuma to listen on
  ##
  port: 3001
  ## @param uptimeKuma.disableFrameSameOrigin [default: false] Allow Uptime-Kuma to be embedded inside HTML 'iframes' of other origins
  ##
  disableFrameSameOrigin: false
  ## @param uptimeKuma.websocketOriginCheck [default: "cors-like"] Configures Uptime-Kuma to check whether the websocket 'ORIGIN' header matches the server's hostname
  ## Set to 'bypass' if this protection is not needed
  ##
  websocketOriginCheck: cors-like
  ## @param uptimeKuma.allowAllChromeExecutables [default: "0"] Allow to specify any executables as Chromium
  ##
  allowAllChromeExecutables: "0"

  ## Data configuration
  ##
  data:
    ## @param uptimeKuma.data.path [default: data] The relative path to store data in
    ## This will be prefixed by the root path within the default Docker Image ("/app" by default)
    ##
    path: data
    ## Kubernetes PVC settings
    ##
    pvc:
      ## @param uptimeKuma.data.pvc.size [default: 5Gi] The size given to PVCs created from the above data
      ##
      size: 5Gi
      ## @param uptimeKuma.data.pvc.storageClass [default: standard] The storageClass given to PVCs created from the above data
      ##
      storageClass: standard
      ## @param uptimeKuma.data.pvc.reclaimPolicy [default: Retain] The resourcePolicy given to PVCs created from the above data
      ##
      reclaimPolicy: Retain
      ## @param uptimeKuma.data.pvc.existingClaim [string] Provide the name to an existing PVC
      ##
      existingClaim: ""

  ## Certificate configuration
  ##
  certs:
    ## @param uptimeKuma.certs.key [string] The path to an TLS certificate key - ignored if 'existingSecret' is set
    ##
    key: ""
    ## @param uptimeKuma.certs.cert [string] The path to an TLS certificate cert - ignored if 'existingSecret' is set
    ##
    cert: ""

    ## TLS passphrase configuration
    ##
    passphrase:
      ## @param uptimeKuma.certs.passphrase.value [string] The passphrase for the TLS certificate key
      ##
      value: ""

      ## TLS passphrase Kubernetes secret
      ##
      existingSecret:
        ## @param uptimeKuma.certs.passphrase.existingSecret.name [string] The name of an existing Kubernetes secret
        ##
        name: ""
        ## @param uptimeKuma.certs.passphrase.existingSecret.key [string] The key within the existing Kubernetes secret
        ##
        key: ""

  ## Cloudflare Tunnel configuration
  ##
  cloudflaredToken:
    ## @param uptimeKuma.cloudflaredToken.value [string] The Cloudflare Tunnel token
    ##
    value: ""

    ## Cloudflare Tunnel Kubernetes secret
    ##
    existingSecret:
      ## @param uptimeKuma.cloudflaredToken.existingSecret.name [string] The name of an existing Kubernetes secret
      ##
      name: ""
      ## @param uptimeKuma.cloudflaredToken.existingSecret.key [string] The key within the existing Kubernetes secret
      ##
      key: ""

  ## Node.js configuration
  ##
  node:
    ## @param uptimeKuma.node.extraCaCerts [string] The path to CA bundle for Node.js to use - in order to verify self-signed certificates
    ##
    extraCaCerts: ""
    ## @param uptimeKuma.node.tlsRejectUnauthorized [string] Ignore all TLS verification errors
    ##
    tlsRejectUnauthorized: "0"
    ## @param uptimeKuma.node.options [array] Specify extra CLI options to pass to Node.js
    ##
    options: []

## @section ConfigMap parameters
##

## Uptime-Kuma ConfigMap settings
## @param configMap.annotations Annotations for the ConfigMap resource
## @param configMap.labels Extra Labels for the ConfigMap resource

configMap:
  annotations: {}
  labels: {}

## @section Common Secret parameters
##

## Uptime-Kuma Common Secret settings
## @param secret.annotations Common annotations for the SMTP, HIBP, Admin and Database secrets
## @param secret.labels Common extra labels for the SMTP, HIBP, Admin and Database secrets

secret:
  annotations: {}
  labels: {}

## @section Ingress parameters
##

## Uptime-Kuma Ingress settings
## @param ingress.enabled Whether to enable Ingress
## @param ingress.className The IngressClass to use for the pod's ingress
## @param ingress.whitelist A comma-separated list of IP addresses to whitelist
## @param ingress.annotations Annotations for the Ingress resource
## @param ingress.tls A list of hostnames and secret names to use for TLS
## @param ingress.extraHosts A list of extra hosts for the Ingress resource (with vaultwarden.domain)

ingress:
  enabled: false
  className: ""
  whitelist: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  extraHosts: []
  # - host: domain.tld
  #   paths:
  #     - path: /
  #       pathType: ImplementationSpecific

## @section Service parameters
##

## Vaultwarden Service settings
service:
  ## @param service.type [default: ClusterIP] The type of service to create
  ##
  type: ClusterIP
  ## @param service.port [default: 80] The port to use on the service
  ##
  port: 80
  ## @param service.nodePort [default: 30080] The Node port to use on the service
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  ## NOTE: choose port between <30000-32767>
  ##
  nodePort: 30080
  ## @param service.extraPorts Extra ports to add to the service
  ## https://kubernetes.io/docs/concepts/services-networking/service/#multi-port-services
  ## e.g.
  ## extraPorts:
  ##   - name: https
  ##     protocol: TCP
  ##     port: 443
  ##     targetPort: 9377
  ##
  extraPorts: []
  ## @param service.annotations [object] Annotations for the service resource
  ##
  annotations: {}
  ## @param service.labels [object] Labels for the service resource
  ##
  labels: {}
  ## @param service.externalTrafficPolicy [default: Cluster] The external traffic policy for the service
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## @param service.internalTrafficPolicy [default: Cluster] The internal traffic policy for the service
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  internalTrafficPolicy: Cluster
  ## @param service.clusterIP [string] Define a static cluster IP for the service
  ##
  clusterIP: ""
  ## @param service.loadBalancerIP Set the Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  loadBalancerIP: ""
  ## @param service.loadBalancerClass Define Load Balancer class if service type is `LoadBalancer` (optional, cloud specific)
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerClass: ""
  ## @param service.loadBalancerSourceRanges Service Load Balancer source ranges
  ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g.
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []
  ## @param service.externalIPs Service External IPs
  ## https://kubernetes.io/docs/concepts/services-networking/service/#external-ips
  ## e.g.
  ## externalIPs:
  ##   - 10.10.10.1
  ##   - 201.22.30.1
  ##
  externalIPs: []
  ## @param service.sessionAffinity Session Affinity for Kubernetes service, can be "None" or "ClientIP"
  ## If "ClientIP", consecutive client requests will be directed to the same Pod
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
  ##
  sessionAffinity: None
  ## @param service.sessionAffinityConfig Additional settings for the sessionAffinity
  ## sessionAffinityConfig:
  ##   clientIP:
  ##     timeoutSeconds: 300
  ##
  sessionAffinityConfig: {}
  ## @param service.ipFamilyPolicy [object] The ipFamilyPolicy
  ## ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/
  ##
  ipFamilyPolicy: ""

## @section RBAC parameters
##

## Uptime-Kuma RBAC settings
## @param rbac.create Whether to create RBAC resources
## @param rbac.rules Extra rules to add to the Role
##
rbac:
  create: true
  rules: []

## @section Service Account parameters
##

## Uptime-Kuma Service Account settings
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
## @param serviceAccount.create Whether a service account should be created
## @param serviceAccount.automount Whether to automount the service account token
## @param serviceAccount.annotations Annotations to add to the service account
## @param serviceAccount.name A custom name for the service account, otherwise uptimeKuma.fullname is used
## @param serviceAccount.secrets A list of secrets mountable by this service account
##
serviceAccount:
  create: true
  automount: false
  annotations: {}
  name: ""
  secrets: []

## @section Liveness Probe parameters
##

## Uptime-Kuma Liveness Probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
##
livenessProbe:
  ## @param livenessProbe.enabled Enable or disable the use of liveness probes
  ##
  enabled: false
  ## @param livenessProbe.initialDelaySeconds Configure the initial delay seconds for the liveness probe
  ##
  initialDelaySeconds: 5
  ## @param livenessProbe.timeoutSeconds Configure the initial delay seconds for the liveness probe
  ##
  timeoutSeconds: 1
  ## @param livenessProbe.periodSeconds Configure the seconds for each period of the liveness probe
  ##
  periodSeconds: 10
  ## @param livenessProbe.successThreshold Configure the success threshold for the liveness probe
  ##
  successThreshold: 1
  ## @param livenessProbe.failureThreshold Configure the failure threshold for the liveness probe
  ##
  failureThreshold: 10

## @section Readiness Probe parameters
##

## Uptime-Kuma Readiness Probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
##
readinessProbe:
  ## @param readinessProbe.enabled Enable or disable the use of readiness probes
  ##
  enabled: false
  ## @param readinessProbe.initialDelaySeconds Configure the initial delay seconds for the readiness probe
  ##
  initialDelaySeconds: 5
  ## @param readinessProbe.timeoutSeconds Configure the initial delay seconds for the readiness probe
  ##
  timeoutSeconds: 1
  ## @param readinessProbe.periodSeconds Configure the seconds for each period of the readiness probe
  ##
  periodSeconds: 10
  ## @param readinessProbe.successThreshold Configure the success threshold for the readiness probe
  ##
  successThreshold: 1
  ## @param readinessProbe.failureThreshold Configure the failure threshold for the readiness probe
  ##
  failureThreshold: 3

## @section Startup Probe parameters
##

## Uptime-Kuma Startup Probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
##
startupProbe:
  ## @param startupProbe.enabled Enable or disable the use of readiness probes
  ##
  enabled: false
  ## @param startupProbe.initialDelaySeconds Configure the initial delay seconds for the startup probe
  ##
  initialDelaySeconds: 5
  ## @param startupProbe.timeoutSeconds Configure the initial delay seconds for the startup probe
  ##
  timeoutSeconds: 1
  ## @param startupProbe.periodSeconds Configure the seconds for each period of the startup probe
  ##
  periodSeconds: 10
  ## @param startupProbe.successThreshold Configure the success threshold for the startup probe
  ##
  successThreshold: 1
  ## @param startupProbe.failureThreshold Configure the failure threshold for the startup probe
  ##
  failureThreshold: 10

## @section PodDisruptionBudget parameters
##

## Uptime-Kuma pod disruption budget settings
## ref: # https://kubernetes.io/docs/tasks/run-application/configure-pdb/
## @param podDisruptionBudget.enabled [default: true] Enable the pod disruption budget
## @param podDisruptionBudget.minAvailable [default: 1] The minimum amount of pods which need to be available
##
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  # maxUnavailable:

## @section Pod settings
##

## Uptime-Kuma resource settings
## ref: https://kubernetes.io/docs/user-guide/compute-resources/
## @param resources The resource limits/requests for the Uptime-Kuma pod
##
resources: {}
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

## ref: https://kubernetes.io/docs/concepts/storage/volumes/
## @param volumes Define volumes for the Paperless pod
##
volumes: []

## ref: https://kubernetes.io/docs/concepts/storage/volumes/
## @param volumeMounts Define volumeMounts for the Paperless pod
##
volumeMounts: []

## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
## @param initContainers Define initContainers for the main Uptime-Kuma server
##
initContainers: []

## @param nodeSelector Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## @param tolerations Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## @param affinity Affinity for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## @param strategy Specify a deployment strategy for the Uptime-Kuma pod
##
strategy: {}
#  type: RollingUpdate
#  rollingUpdate:
#    maxUnavailable: 1

## @param podAnnotations Extra annotations for the Uptime-Kuma pod
##
podAnnotations: {}

## @param podLabels Extra labels for the Uptime-Kuma pod
##
podLabels: {}
#  pod-security.kubernetes.io/warn: privileged
#  pod-security.kubernetes.io/audit: privileged
#  pod-security.kubernetes.io/enforce: baseline

## @param priorityClassName The name of an existing PriorityClass
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/
##
priorityClassName: ""

## @section Security context settings
##

## @param podSecurityContext Security context settings for the Uptime-Kuma pod
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
podSecurityContext: {}
# fsGroup: 1001
# supplementalGroups:
#   - 1001

## @param securityContext General security context settings for
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
securityContext: {}
# allowPrivilegeEscalation: false
# privileged: false
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsGroup: 1001
# runAsUser: 1001
# capabilities:
#   drop:
#     - ALL
