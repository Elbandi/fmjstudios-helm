{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "The Docker registry to pull the image from",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "The registry repository to pull the image from",
                    "default": "louislam/uptimeKuma"
                },
                "tag": {
                    "type": "string",
                    "description": "The image tag to pull",
                    "default": "'1.23.11'"
                },
                "digest": {
                    "type": "string",
                    "description": "The image digest to pull",
                    "default": "\"\""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "The Kubernetes image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "A list of secrets to use for pulling images from private registries",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override uptimeKuma.fullname",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override uptimeKuma.fullname",
            "default": ""
        },
        "uptimeKuma": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "The host address to bind Uptime-Kuma to",
                    "default": "\"::\""
                },
                "port": {
                    "type": "number",
                    "description": "The port for Uptime-Kuma to listen on",
                    "default": "3001"
                },
                "disableFrameSameOrigin": {
                    "type": "boolean",
                    "description": "Allow Uptime-Kuma to be embedded inside HTML 'iframes' of other origins",
                    "default": "false"
                },
                "websocketOriginCheck": {
                    "type": "string",
                    "description": "Configures Uptime-Kuma to check whether the websocket 'ORIGIN' header matches the server's hostname",
                    "default": "\"cors-like\""
                },
                "allowAllChromeExecutables": {
                    "type": "string",
                    "description": "Allow to specify any executables as Chromium",
                    "default": "\"0\""
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "path": {
                            "type": "string",
                            "description": "The relative path to store data in",
                            "default": "data"
                        },
                        "pvc": {
                            "type": "object",
                            "properties": {
                                "size": {
                                    "type": "string",
                                    "description": "The size given to PVCs created from the above data",
                                    "default": "5Gi"
                                },
                                "storageClass": {
                                    "type": "string",
                                    "description": "The storageClass given to PVCs created from the above data",
                                    "default": "standard"
                                },
                                "reclaimPolicy": {
                                    "type": "string",
                                    "description": "The resourcePolicy given to PVCs created from the above data",
                                    "default": "Retain"
                                },
                                "existingClaim": {
                                    "type": "string",
                                    "description": "Provide the name to an existing PVC",
                                    "default": "\"\""
                                }
                            }
                        }
                    }
                },
                "certs": {
                    "type": "object",
                    "properties": {
                        "key": {
                            "type": "string",
                            "description": "The path to an TLS certificate key - ignored if 'existingSecret' is set",
                            "default": "\"\""
                        },
                        "cert": {
                            "type": "string",
                            "description": "The path to an TLS certificate cert - ignored if 'existingSecret' is set",
                            "default": "\"\""
                        },
                        "passphrase": {
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "string",
                                    "description": "The passphrase for the TLS certificate key",
                                    "default": "\"\""
                                },
                                "existingSecret": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "The name of an existing Kubernetes secret",
                                            "default": "\"\""
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "The key within the existing Kubernetes secret",
                                            "default": "\"\""
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "cloudflaredToken": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "description": "The Cloudflare Tunnel token",
                            "default": "\"\""
                        },
                        "existingSecret": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of an existing Kubernetes secret",
                                    "default": "\"\""
                                },
                                "key": {
                                    "type": "string",
                                    "description": "The key within the existing Kubernetes secret",
                                    "default": "\"\""
                                }
                            }
                        }
                    }
                },
                "node": {
                    "type": "object",
                    "properties": {
                        "extraCaCerts": {
                            "type": "string",
                            "description": "The path to CA bundle for Node.js to use - in order to verify self-signed certificates",
                            "default": "\"\""
                        },
                        "tlsRejectUnauthorized": {
                            "type": "string",
                            "description": "Ignore all TLS verification errors",
                            "default": "\"\""
                        },
                        "options": {
                            "type": "array",
                            "description": "Specify extra CLI options to pass to Node.js",
                            "default": "[]",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "configMap": {
            "type": "object",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": "Annotations for the ConfigMap resource",
                    "default": {}
                },
                "labels": {
                    "type": "object",
                    "description": "Extra Labels for the ConfigMap resource",
                    "default": {}
                }
            }
        },
        "secret": {
            "type": "object",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": "Common annotations for the SMTP, HIBP, Admin and Database secrets",
                    "default": {}
                },
                "labels": {
                    "type": "object",
                    "description": "Common extra labels for the SMTP, HIBP, Admin and Database secrets",
                    "default": {}
                }
            }
        },
        "ingress": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable Ingress",
                    "default": false
                },
                "className": {
                    "type": "string",
                    "description": "The IngressClass to use for the pod's ingress",
                    "default": ""
                },
                "whitelist": {
                    "type": "string",
                    "description": "A comma-separated list of IP addresses to whitelist",
                    "default": ""
                },
                "annotations": {
                    "type": "object",
                    "description": "Annotations for the Ingress resource",
                    "default": {}
                },
                "tls": {
                    "type": "array",
                    "description": "A list of hostnames and secret names to use for TLS",
                    "default": [],
                    "items": {}
                },
                "extraHosts": {
                    "type": "array",
                    "description": "A list of extra hosts for the Ingress resource (with vaultwarden.domain)",
                    "default": [],
                    "items": {}
                }
            }
        },
        "service": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of service to create",
                    "default": "ClusterIP"
                },
                "port": {
                    "type": "number",
                    "description": "The port to use on the service",
                    "default": "80"
                },
                "nodePort": {
                    "type": "number",
                    "description": "The Node port to use on the service",
                    "default": "30080"
                },
                "extraPorts": {
                    "type": "array",
                    "description": "Extra ports to add to the service",
                    "default": [],
                    "items": {}
                },
                "externalTrafficPolicy": {
                    "type": "string",
                    "description": "The external traffic policy for the service",
                    "default": "Cluster"
                },
                "internalTrafficPolicy": {
                    "type": "string",
                    "description": "The internal traffic policy for the service",
                    "default": "Cluster"
                },
                "clusterIP": {
                    "type": "string",
                    "description": "Define a static cluster IP for the service",
                    "default": "\"\""
                },
                "loadBalancerIP": {
                    "type": "string",
                    "description": "Set the Load Balancer IP",
                    "default": ""
                },
                "loadBalancerClass": {
                    "type": "string",
                    "description": "Define Load Balancer class if service type is `LoadBalancer` (optional, cloud specific)",
                    "default": ""
                },
                "loadBalancerSourceRanges": {
                    "type": "array",
                    "description": "Service Load Balancer source ranges",
                    "default": [],
                    "items": {}
                },
                "externalIPs": {
                    "type": "array",
                    "description": "Service External IPs",
                    "default": [],
                    "items": {}
                },
                "sessionAffinity": {
                    "type": "string",
                    "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                    "default": "None"
                },
                "sessionAffinityConfig": {
                    "type": "object",
                    "description": "Additional settings for the sessionAffinity",
                    "default": {}
                }
            }
        },
        "rbac": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Whether to create RBAC resources",
                    "default": true
                },
                "rules": {
                    "type": "array",
                    "description": "Extra rules to add to the Role",
                    "default": [],
                    "items": {}
                }
            }
        },
        "serviceAccount": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Whether a service account should be created",
                    "default": true
                },
                "automount": {
                    "type": "boolean",
                    "description": "Whether to automount the service account token",
                    "default": false
                },
                "annotations": {
                    "type": "object",
                    "description": "Annotations to add to the service account",
                    "default": {}
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for the service account, otherwise uptimeKuma.fullname is used",
                    "default": ""
                },
                "secrets": {
                    "type": "array",
                    "description": "A list of secrets mountable by this service account",
                    "default": [],
                    "items": {}
                }
            }
        },
        "livenessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable the use of liveness probes",
                    "default": false
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Configure the initial delay seconds for the liveness probe",
                    "default": 5
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Configure the initial delay seconds for the liveness probe",
                    "default": 1
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Configure the seconds for each period of the liveness probe",
                    "default": 10
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Configure the success threshold for the liveness probe",
                    "default": 1
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Configure the failure threshold for the liveness probe",
                    "default": 10
                }
            }
        },
        "readinessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable the use of readiness probes",
                    "default": false
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Configure the initial delay seconds for the readiness probe",
                    "default": 5
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Configure the initial delay seconds for the readiness probe",
                    "default": 1
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Configure the seconds for each period of the readiness probe",
                    "default": 10
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Configure the success threshold for the readiness probe",
                    "default": 1
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Configure the failure threshold for the readiness probe",
                    "default": 3
                }
            }
        },
        "startupProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable the use of readiness probes",
                    "default": false
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Configure the initial delay seconds for the startup probe",
                    "default": 5
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Configure the initial delay seconds for the startup probe",
                    "default": 1
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Configure the seconds for each period of the startup probe",
                    "default": 10
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Configure the success threshold for the startup probe",
                    "default": 1
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Configure the failure threshold for the startup probe",
                    "default": 10
                }
            }
        },
        "podDisruptionBudget": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable the pod disruption budget",
                    "default": "true"
                },
                "minAvailable": {
                    "type": "number",
                    "description": "The minimum amount of pods which need to be available",
                    "default": "1"
                }
            }
        },
        "resources": {
            "type": "object",
            "description": "The resource limits/requests for the Uptime-Kuma pod",
            "default": {}
        },
        "volumes": {
            "type": "array",
            "description": "Define volumes for the Paperless pod",
            "default": [],
            "items": {}
        },
        "volumeMounts": {
            "type": "array",
            "description": "Define volumeMounts for the Paperless pod",
            "default": [],
            "items": {}
        },
        "initContainers": {
            "type": "array",
            "description": "Define initContainers for the main Uptime-Kuma server",
            "default": [],
            "items": {}
        },
        "nodeSelector": {
            "type": "object",
            "description": "Node labels for pod assignment",
            "default": {}
        },
        "tolerations": {
            "type": "array",
            "description": "Tolerations for pod assignment",
            "default": [],
            "items": {}
        },
        "affinity": {
            "type": "object",
            "description": "Affinity for pod assignment",
            "default": {}
        },
        "strategy": {
            "type": "object",
            "description": "Specify a deployment strategy for the Uptime-Kuma pod",
            "default": {}
        },
        "podAnnotations": {
            "type": "object",
            "description": "Extra annotations for the Uptime-Kuma pod",
            "default": {}
        },
        "podLabels": {
            "type": "object",
            "description": "Extra labels for the Uptime-Kuma pod",
            "default": {}
        },
        "priorityClassName": {
            "type": "string",
            "description": "The name of an existing PriorityClass",
            "default": ""
        },
        "podSecurityContext": {
            "type": "object",
            "description": "Security context settings for the Uptime-Kuma pod",
            "default": {}
        },
        "securityContext": {
            "type": "object",
            "description": "General security context settings for",
            "default": {}
        }
    }
}
